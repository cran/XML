<!--  Copyright Duncan Temple Lang & Robert Gentleman -->

<!ENTITY % True    "TRUE | true | True | T ">
<!ENTITY % False   "False | false | False | F">
<!ENTITY % Boolean " %True; | %False; ">

<!ENTITY % RSType "ANY" >

<!ENTITY % Primitives " double | integer | logical | string | char ">

<!ENTITY % ArrayElements "( %Primitives; | object )" >

<!ENTITY % RowNames "array">

<!ELEMENT integer (#PCDATA)>
<!ELEMENT double (#PCDATA)>
<!ELEMENT string (#PCDATA)>
 <!-- enumerate all possible values? Unicode-->
<!ELEMENT char   (#PCDATA)>
<!-- enumerated values -->
<!ELEMENT logical (#PCDATA)>


<!ELEMENT element ( %RSType; ) >

<!ELEMENT object  ((slot)*, (classes)?)>
<!ELEMENT classes (class*)>
<!ELEMENT class   (#PCDATA)>
<!ELEMENT slot    %RSType;>
<!ATTLIST slot
         name  CDATA #REQUIRED>



<!ELEMENT name (#PCDATA)>

<!ELEMENT namedlist (name,element)* >
<!ATTLIST namedlist 
        length CDATA #IMPLIED
        elementType CDATA #IMPLIED
>

<!ELEMENT list (element)*>
<!ATTLIST list 
        length CDATA #IMPLIED
        elementType CDATA #IMPLIED
>

<!ELEMENT array ( dimension,  list, (dimensionOrder)? , (dimnames)? ) >
<!ATTLIST array
        elementType CDATA #IMPLIED
>
<!ATTLIST dimension
        length CDATA #IMPLIED
>


<!ELEMENT dimensionOrder (integer)*>
<!ELEMENT dimnames (list) >
<!ELEMENT data  (%ArrayElements;)*>


<!ELEMENT rownames (array) >
<!ELEMENT dataframe (namedlist, %RowNames; ) >
<!ATTLIST dataframe
          numRecords CDATA #IMPLIED
          rownamesId CDATA #IMPLIED>



<!-- A factor can just be a set of values which can then be
     processed into a set and indices into that set, or it
     can be given in this full form to start with, i.e. 
     level set and indices.
     -->
<!ELEMENT levels (list)>
<!ELEMENT values (list)>
<!ELEMENT factor (values,levels)>
<!ATTLIST factor
       ordered  ( %Boolean; )  "False"
>

<!-- Do we want <primitive>Array (i.e. integerArray) for efficiency, etc. 
     Think of processing this in something like C/C++, Java, etc.
     where we would like to be able to allocate the array ahead of time.
-->

