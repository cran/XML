Version 0.93-1

  *   Documentation updates. Included xmlGetAttr.Rd.

Version 0.93-0

  *   Added toString.XMLNode

  *   Fixed the printing of degenerate namespaces in an XML node,
      i.e. the spurious `:'.

Version 0.92-2

  *   Fixed C bug caused by using namespace without a prefix,
      e.g. xmlns="http:...." assumed prefix was present.
      Thanks to David Meyer.
  
Version 0.92-1
  *   Display the namespace definitions when printing an XMLNode object.

  *   New addAttributeNamespaces argument for xmlTreeParse() that controls whether
      namespaces are included in attribute names.

Version 0.92-0

  *   XMLNode class now contains a field for namespace definitions
      The `namespace' field is a character string identifying the prefix's 
      namespace. The `namespaceDefinition' field contains the full definitions
      of each of the namespaces defined within a node.
     
  *   Printing of XLM nodes displays the namespace.

  *   xmlName() takes a `full' argument that controls whether the 
      namespace prefix is prepended to the tag name.

Version 0.91-0

  *  Added a mechanism to the SAX parser to allow a state object
     be passed between the callbacks and returned as the result of
     the parsing. This avoids the need for closures. Also, works
     with S4 classes and the genericSAXHandlers() methods by allowing
     one to write methods for these generic callbacks that dispatch 
     based on the type of the state object.

  *  Fix to make work properly with S4 class system.

Version 0.9-1

  *  Formatting of the help files to avoid long lines
     identified by Ott Toomet

  *  Addition of `ignoreComments' argument for xmlValue()

  *  Date in the DESCRIPTION file corrected (thanks to Doug Bates).

Version 0.9-0

  *  Added addCData() and addPI() to the handlers of the different 
     XMLOutputStream classes.
     Code for XMLInternalDOM (i.e. xmlTree()) from Byron Ellis.

  *  print() method for XMLProcessingInstruction node has the terminating `?'
     as in <?pi-name text ?>.

Version 0.8-2

  * Changes to support libxml2-2.4.21 (specifically the issues with
    the headers and parse error regarding xmlValidCtxt). Thanks to 
    Wolfgang Huber for identifying this.

  * Ignoring R_VERSION now, so dependency is R >= 1.2.0

Version 0.8-1

  * Added an `attrs' argument to the xmlOutputBuffer and xmlTree
    functions for specifying the top-level node.

Version 0.8-0

  * xmlValue() extended to work recursively if a node has
    only one child. 

  * T and F replaced by TRUE and FALSE

Version 0.7-4

  * Support for Windows

Version 0.7-3

  * Documents without <DOCTYPE ..> are handled correctly.

  * Configuration tweak to set LD_LIBRARY_PATH to handle the case
    that the user specifies LIBXML_LIBDIR and it is needed to run the 
    version test.

  * Keyword XML changed to IO.

Version 0.7-2

  * Fix for printing XMLNode objects  to handle comments and elements 
    with name "text". Identified by Andrew Schuh.

Version 0.7-1

  * Minor fixes for passing R CMD check.

Version 0.7-0

  * Generating XML trees using internal libxml structures: 
     xmlTree(), newXMLDoc(), newXMLNode(), saveXML().

  * Support parsing HTML (htmlTreeParse()) using DOM.
     Suggestion from Luis Torgo.

  * Additional updates for libxml2, relating to DTDs.

Version 0.6-3

  * Installation using --with-xml2 now attempts to link against libxml2.so
    and the appropriate header files.

  * Use libxml's xml-config or xml2-config scripts if these are available.

Version 0.6
   
  * xmlDOMApply for recursively applying a function to each node in a tree.

Version 0.5-1

  * simplification of xmlOutputBuffer so that it doesn't put
    the namespace definition in each and every tag.

  * configuration changes to support libxml2-2.3.6
    (look for libxml2, check if xmlHashSize is available)

  * now dropping nodes if the handler function returns NULL.
    Updated documentation.

  * spelling correction in the documentation

Version 0.5
 * xmlOutputBuffer now accepts a connection.   

 * Fixes for using libxml2, specifically 2.2.12.
   Also works for libxml2.2.8

 * Enhanced configuration script to determine what features are available.
   
Version 0.4

 * `namespace' handler in xmlTreeParse is called when a namespace
   declaration is encountered. This is called before the child nodes
   are processed.

 * More documentation, in Tour.

 * xmlValue, xmlApply, xmlSApply, xmlRoot, xmlNamespace, length, names

 * Constructors for different types of nodes: XMLNode, XMLTextNode, XMLProcessingInstruction.

 * Methods for print(), subsetting ([ and [[), accessing the fields
   in an XMLNode object.

 * New classes for the different node types (e.g. XMLTextNode)

 * Event driven parsing available via libxml. Expat is not needed but
   can be used.

 * Document sources can be URLs (ftp and http) when using the libxml parser.

 * Examples for processing MathML and SVG files. See examples/ directory.

 * Examples for event driven parsing.



 * Class of result from xmlTreeParse is XMLDocument.

 * Comments, Entities, Text, etc. inherit from XMLNode
   in addition to defining their own XML<type> class.

 